@startuml
skinparam groupInheritance 2
skinparam backgroundColor #CCCCCC

class Game {
  -WorldMap world
  -Inventory inventory

  +WorldMap getWorld()
  +Inventory getInventory()
}

class Inventory {
  -Map<ResourceType, Integer> resources
  {static} -Inventory instance

  +void add(final ResourceType type, final int amount)
  +void remove(final ResourceType type, final int amount)
  +int get(final ResourceType type)
  {static} +Inventory getInstance()
}

class WorldMap {
  -int width
  -int height
  -List<List<Cell>> cells
  {static} -WorldMap instance


  +int getWidth()
  +int getHeight()
  +List<List<Cell>> getCells()

  +Cell getCell(final int x, final int y)
  +void insertUnits(List<Unit> units)

  +WorldMap getInstance(int width, int height)
  +WorldMap getInstance()
}

class Cell {
  -int x
  -int y
  -int ressourceAmount
  -ResourceType type
  -Unit unit

  +int getX()
  +int getY()
  +int getResourceCount()
  +void setResourceCount(final int count)
  +ResourceType getResourceType()
  +Unit getUnit()
  +void setUnit(final Unit unit)

  +void insertUnit(final Unit unit)
  +int mine(final int amount)

  +Cell findClosest(ResourceType resourceType)
}

enum ResourceType {
  {field} +WOOD (spawnChance=0.3, maxVeinSize=50)
  {field} +STONE (spawnChance=0.3, maxVeinSize=50)
  {field} +GOLD (spawnChance=0.3, maxVeinSize=50)
  {field} +FOOD (spawnChance=0.3, maxVeinSize=50)

  -float spawnChance
  -int maxVeinSize

  +float getSpawnChance()
  +int getMaxVeinSize()

  {static} +ResourceType getRandomType()
}


class Unit {
  +int x
  +int y
  +int speed
  +int hunger
  +int xp

  +void mine()
  +boolean canMove(int x, int y)
  +void move(int x, int y)
}

class Group extends Unit {
  +List<Unit> units
}

class Woodworker extends Unit {}
class Miner extends Unit {}
class Farmer extends Unit {}

class Expert extends Unit {
  +Unit unit
  +int returnTo

  +void promote(Unit)
  +Unit demote()
}

class Rider extends Unit {
  +Unit unit
}

@enduml